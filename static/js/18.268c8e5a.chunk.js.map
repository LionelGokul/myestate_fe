{"version":3,"sources":["pages/PropertyDetailedView/PropertyDetailedView.js"],"names":["DetailPropertyOverview","lazy","PropertyMap","DetailPropertyImage","DetailedAmenties","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","p","component","a11yProps","PropertyDetailedView","useParams","useState","property","setProperty","sendRequest","useAxios","useEffect","then","res","catch","err","console","log","React","tabSelected","setTabSelected","fallback","className","title","onChange","event","newValue","variant","scrollButtons","indicatorColor","textColor","aria-label","label","propertyAmenities","images","amenities","furnishings","propertyFurnishings","rooms","propertyRooms","propertyName","name","lat","latitude","long","longitude"],"mappings":"wOAWMA,EAAyBC,gBAAK,kBAClC,kCAEIC,EAAcD,gBAAK,kBAAM,wDACzBE,EAAsBF,gBAAK,kBAC/B,wDAEIG,EAAmBH,gBAAK,kBAAM,kCAEpC,SAASI,EAASC,GAAQ,IAChBC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADZ,YACsBJ,EADtB,8BAGvB,OACE,uCACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,oCAA+BJ,GACjCK,kBAAA,+BAAyCL,IACrCC,GAEHF,IAAUC,GACT,kBAAC,IAAD,CAAKM,EAAG,GACN,kBAAC,IAAD,CAAYC,UAAW,QAAST,KAW1C,IAAMU,EAAY,SAACR,GACjB,MAAO,CACLI,GAAG,wBAAD,OAA0BJ,GAC5B,gBAAgB,6BAAhB,OAA8CA,KAkFnCS,UA/Ec,WAAO,IAC1BL,EAAOM,cAAPN,GADyB,EAEDO,mBAAS,IAFR,mBAE1BC,EAF0B,KAEhBC,EAFgB,KAGzBC,EAAgBC,cAAhBD,YACRE,qBAAU,WACRF,EAAY,MAAD,mBAAoBV,IAC5Ba,MAAK,SAACC,GACLL,EAAYK,MAEbC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAZ8B,MAaKG,IAAMZ,SAAS,GAbpB,mBAa1Ba,EAb0B,KAabC,EAba,KAmBjC,OACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAClB,yBAAKC,UAAU,eACZf,EAASR,IACR,oCACE,kBAAC,IAAD,CAAOwB,MAAM,qBACb,yBAAKD,UAAU,eACb,kBAAC,IAAD,CACE5B,MAAOyB,EACPK,SAbO,SAACC,EAAOC,GAC3BN,EAAeM,IAaHJ,UAAU,uBACVK,QAAQ,aACRC,cAAc,KACdC,eAAe,YACfC,UAAU,YACVC,aAAW,iCAEX,kBAAC,IAAD,eAAKC,MAAM,WAAWV,UAAU,QAAWnB,EAAU,KACrD,kBAAC,IAAD,eACE6B,MAAM,oBACNV,UAAU,QACNnB,EAAU,KAEgB,OAA/BI,EAAS0B,mBACR,kBAAC,IAAD,eACED,MAAM,qBACNV,UAAU,QACNnB,EAAU,OAKtB,kBAACZ,EAAD,CAAUG,MAAOyB,EAAaxB,MAAO,GACnC,kBAACT,EAAD,CAAwBqB,SAAUA,KAEpC,kBAAChB,EAAD,CAAUG,MAAOyB,EAAaxB,MAAO,GACnC,kBAACN,EAAD,CAAqB6C,OAAQ3B,EAAS2B,UAER,OAA/B3B,EAAS0B,kBACR,kBAAC1C,EAAD,CAAUG,MAAOyB,EAAaxB,MAAO,GACnC,kBAACL,EAAD,CACE6C,UAAW5B,EAAS0B,kBACpBG,YAAa7B,EAAS8B,oBACtBC,MAAO/B,EAASgC,iBAGlB,KACJ,yBAAKjB,UAAU,eACf,kBAAClC,EAAD,CACEoD,aAAcjC,EAASkC,KACvBC,IAAKnC,EAASoC,SACdC,KAAMrC,EAASsC","file":"static/js/18.268c8e5a.chunk.js","sourcesContent":["import React, { useEffect, useState, Suspense, lazy } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAxios } from '../../shared/hooks/useAxios';\r\nimport Title from '../../shared/components/UIElements/Title';\r\nimport { Tab, Tabs } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './PropertyDetailedView.css';\r\nimport Loader from '../../shared/components/UIElements/Loader';\r\n\r\nconst DetailPropertyOverview = lazy(() =>\r\n  import('./Components/DetailPropertyOverview'),\r\n);\r\nconst PropertyMap = lazy(() => import('./Components/PropertyMap'));\r\nconst DetailPropertyImage = lazy(() =>\r\n  import('./Components/DetailPropertyImage'),\r\n);\r\nconst DetailedAmenties = lazy(() => import('./Components/DetailedAmenties'));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={'span'}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n};\r\nconst PropertyDetailedView = () => {\r\n  const { id } = useParams();\r\n  const [property, setProperty] = useState({});\r\n  const { sendRequest } = useAxios();\r\n  useEffect(() => {\r\n    sendRequest('get', `property/${id}`)\r\n      .then((res) => {\r\n        setProperty(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const [tabSelected, setTabSelected] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setTabSelected(newValue);\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <div className=\"cmn_section\">\r\n        {property.id && (\r\n          <>\r\n            <Title title=\"Property Summary\"></Title>\r\n            <div className=\"propertyTab\">\r\n              <Tabs\r\n                value={tabSelected}\r\n                onChange={handleChange}\r\n                className=\"property_detail_tabs\"\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"on\"\r\n                indicatorColor=\"secondary\"\r\n                textColor=\"secondary\"\r\n                aria-label=\"scrollable force tabs example\"\r\n              >\r\n                <Tab label=\"Overview\" className=\"tabs\" {...a11yProps(0)}></Tab>\r\n                <Tab\r\n                  label=\"Properties Images\"\r\n                  className=\"tabs\"\r\n                  {...a11yProps(1)}\r\n                />\r\n                {property.propertyAmenities !== null && (\r\n                  <Tab\r\n                    label=\"Properties Details\"\r\n                    className=\"tabs\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                )}\r\n              </Tabs>\r\n            </div>\r\n            <TabPanel value={tabSelected} index={0}>\r\n              <DetailPropertyOverview property={property} />\r\n            </TabPanel>\r\n            <TabPanel value={tabSelected} index={1}>\r\n              <DetailPropertyImage images={property.images} />\r\n            </TabPanel>\r\n            {property.propertyAmenities !== null ? (\r\n              <TabPanel value={tabSelected} index={2}>\r\n                <DetailedAmenties\r\n                  amenities={property.propertyAmenities}\r\n                  furnishings={property.propertyFurnishings}\r\n                  rooms={property.propertyRooms}\r\n                />\r\n              </TabPanel>\r\n            ) : null}\r\n            <div className=\"margin_top\" />\r\n            <PropertyMap\r\n              propertyName={property.name}\r\n              lat={property.latitude}\r\n              long={property.longitude}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default PropertyDetailedView;\r\n"],"sourceRoot":""}