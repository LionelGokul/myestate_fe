{"version":3,"sources":["../node_modules/@material-ui/core/esm/Typography/Typography.js","shared/components/FormElements/CustomSlider.js","shared/components/FormElements/CustomAutoComplete.js","shared/DataLayer/SearchResultsReducer.js","pages/SearchResults/Components/SearchResultsFilter.js","pages/SearchResults/SearchResults.js"],"names":["defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","CustomSlider","label","id","undefined","formatLabel","value","valueLabelFormat","onChange","e","newValue","setValue","min","minValue","max","maxValue","valueLabelDisplay","aria-labelledby","CustomAutoComplete","control","useFormContext","defaultValue","rules","render","renderParams","multiple","options","renderInput","params","data","ACTIONS","FILTER","SET_DATA","CLEAR_FILTER","SearchResultsReducer","state","action","type","filteredData","initialData","filter","payload","city","length","val","includes","propertyRooms","price","propType","propertyType","cities","propertyTypes","SearchResultFilter","setPrice","onClear","Grid","style","borderRadius","container","direction","justify","alignItems","spacing","item","xs","maxWidth","FormSubmitSection","onCancel","submitButtonText","cancelButtonText","SearchResultsPropertyList","lazy","SearchResults","query","useParams","sendRequest","useAxios","useReducer","dispatch","useState","useEffect","then","res","catch","err","console","log","fallback","Loader","justifyContent","Form","onSubmit","property_type","propertyList"],"mappings":"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","file":"static/js/12.fc030d43.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst CustomSlider = (props) => {\r\n  return (\r\n    <>\r\n      {props.label && (\r\n        <Typography id=\"non-linear-slider\" gutterBottom>\r\n          {props.label}\r\n        </Typography>\r\n      )}\r\n      {props.formatLabel !== undefined ? (\r\n        <Slider\r\n          value={props.value}\r\n          valueLabelFormat={props.formatLabel}\r\n          onChange={(e, newValue) => {\r\n            props.setValue(newValue);\r\n          }}\r\n          min={props.minValue}\r\n          max={props.maxValue}\r\n          color=\"secondary\"\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"range-slider\"\r\n          {...props}\r\n        />\r\n      ) : (\r\n        <Slider\r\n          value={props.value}\r\n          onChange={(e, newValue) => {\r\n            props.setValue(newValue);\r\n          }}\r\n          min={props.minValue}\r\n          max={props.maxValue}\r\n          color=\"secondary\"\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"range-slider\"\r\n          {...props}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomSlider;\r\n","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n\r\nconst CustomAutoComplete = (props) => {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={props.name}\r\n      id={props.id}\r\n      defaultValue={props.defaultValue}\r\n      control={control}\r\n      rules={props.rules}\r\n      render={({ onChange, ...renderParams }) => (\r\n        <Autocomplete\r\n          multiple={props.multiple || false}\r\n          {...renderParams}\r\n          options={props.options}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={props.label}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            />\r\n          )}\r\n          onChange={(e, data) => onChange(data)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomAutoComplete;\r\n","export const ACTIONS = {\r\n  FILTER: 'FILTER_DATA',\r\n  SET_DATA: 'SET_DATA',\r\n  CLEAR_FILTER: 'CLEAR_FILTER',\r\n};\r\n\r\nexport const SearchResultsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.FILTER: {\r\n      let filteredData = state.initialData;\r\n      const filter = action.payload;\r\n      debugger;\r\n\r\n      // city filter\r\n      if (filter.city.length !== 0) {\r\n        filteredData = filteredData.filter((val) =>\r\n          filter.city.includes(val.city),\r\n        );\r\n      }\r\n\r\n      // type filter\r\n      if (filter.type.length !== 0) {\r\n        if (filter.type.length !== 2 || filter.type.length !== 0) {\r\n          if (filter.type[0] === 'rent') {\r\n            filteredData = filteredData.filter(\r\n              (val) => val.propertyRooms !== null,\r\n            );\r\n          } else {\r\n            filteredData = filteredData.filter(\r\n              (val) => val.propertyRooms === null,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      // type filter\r\n      if (filter.price[0] !== 0 || filter.price[1] !== 100000) {\r\n        if (filter.price[0] !== 0 && filter.price[1] !== 100000) {\r\n          filteredData = filteredData.filter(\r\n            (val) => val.price > filter.price[0] && val.price < filter.price[1],\r\n          );\r\n        } else if (filter.price[0] !== 0) {\r\n          filteredData = filteredData.filter(\r\n            (val) => val.price > filter.price[0],\r\n          );\r\n        } else {\r\n          filteredData = filteredData.filter(\r\n            (val) => val.price < filter.price[1],\r\n          );\r\n        }\r\n      }\r\n\r\n      // property type\r\n      if (filter.propType && filter.propType.length !== 0) {\r\n        filteredData = filteredData.filter((val) =>\r\n          filter.propType.includes(val.propertyType),\r\n        );\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        filteredData: filteredData,\r\n      };\r\n    }\r\n    case ACTIONS.SET_DATA: {\r\n      return {\r\n        filteredData: action.payload,\r\n        initialData: action.payload,\r\n      };\r\n    }\r\n\r\n    case ACTIONS.CLEAR_FILTER: {\r\n      return {\r\n        ...state,\r\n        filteredData: state.initialData,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CustomSlider from '../../../shared/components/FormElements/CustomSlider';\r\nimport CustomAutoComplete from '../../../shared/components/FormElements/CustomAutoComplete';\r\nimport FormSubmitSection from '../../../shared/components/FormElements/FormSubmitSection';\r\n\r\nconst cities = ['Chennai', 'Arrakonam', 'Banglore', 'Hyderabad'];\r\nconst propertyTypes = ['Land', 'Appartment', 'House', 'Villa'];\r\nconst SearchResultFilter = ({ price, setPrice, onClear }) => {\r\n  const priceLabelFormat = (value) => {\r\n    if (value === 100000)\r\n      return <div className=\"cmn_slider_label\">1 lakh+</div>;\r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      className=\"search_filters\"\r\n      style={{ margin: 'auto', borderRadius: 5 }}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        style={{ width: '95%', margin: 'auto', borderRadius: 5 }}\r\n        spacing={3}\r\n      >\r\n        <Grid item xs={4}>\r\n          <CustomAutoComplete\r\n            name=\"city\"\r\n            id=\"city\"\r\n            label=\"City\"\r\n            defaultValue={[]}\r\n            options={cities}\r\n            multiple\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <CustomAutoComplete\r\n            name=\"type\"\r\n            id=\"type\"\r\n            defaultValue={[]}\r\n            label=\"Type\"\r\n            options={['buy', 'rent']}\r\n            multiple\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <CustomSlider\r\n            name=\"price\"\r\n            id=\"price\"\r\n            value={price}\r\n            setValue={setPrice}\r\n            minValue={0}\r\n            maxValue={100000}\r\n            formatLabel={priceLabelFormat}\r\n            label=\"Price\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        style={{ maxWidth: '95%', margin: 'auto', borderRadius: 5 }}\r\n        spacing={3}\r\n      >\r\n        <Grid item xs={6}>\r\n          <CustomAutoComplete\r\n            name=\"property_type\"\r\n            id=\"property_type\"\r\n            label=\"Property Type\"\r\n            defaultValue={[]}\r\n            options={propertyTypes}\r\n            multiple\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormSubmitSection\r\n            onCancel={onClear}\r\n            submitButtonText=\"Apply\"\r\n            cancelButtonText=\"clear\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchResultFilter;\r\n","import React, { useReducer, useState, useEffect, Suspense, lazy } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Form from '../../shared/components/FormElements/Form';\r\nimport SearchResultFilter from './Components/SearchResultsFilter';\r\nimport Loader from '../../shared/components/UIElements/Loader';\r\nimport {\r\n  SearchResultsReducer,\r\n  ACTIONS,\r\n} from '../../shared/DataLayer/SearchResultsReducer';\r\nimport { useAxios } from '../../shared/hooks/useAxios';\r\nconst SearchResultsPropertyList = lazy(() =>\r\n  import('./Components/SearchResultsPropertyList'),\r\n);\r\n\r\nconst SearchResults = ({}) => {\r\n  const { query } = useParams();\r\n  const { sendRequest } = useAxios();\r\n  const initialState = {\r\n    initialData: [],\r\n    filteredData: [],\r\n  };\r\n  const [state, dispatch] = useReducer(SearchResultsReducer, initialState);\r\n  const [price, setPrice] = useState([0, 100000]);\r\n\r\n  useEffect(() => {\r\n    sendRequest('get', `search/${query}`)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: ACTIONS.SET_DATA,\r\n          payload: res,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [query]);\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch({\r\n      type: ACTIONS.FILTER,\r\n      payload: {\r\n        city: data.city || null,\r\n        type: data.type || null,\r\n        price: price,\r\n        propType: data.property_type || null,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClear = () => {\r\n    setPrice([0, 100000]);\r\n    dispatch({\r\n      type: ACTIONS.CLEAR_FILTER,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ width: '95%', margin: 'auto', borderRadius: 5 }}\r\n        spacing={2}\r\n      >\r\n        <Grid\r\n          item\r\n          xs\r\n          style={{ width: '100%', margin: 'auto', borderRadius: 5 }}\r\n        >\r\n          <Form onSubmit={onSubmit}>\r\n            <SearchResultFilter\r\n              price={price}\r\n              setPrice={setPrice}\r\n              onClear={onClear}\r\n            />\r\n          </Form>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs\r\n          style={{ width: '100%', margin: 'auto', borderRadius: 5 }}\r\n        >\r\n          <SearchResultsPropertyList propertyList={state.filteredData} />\r\n        </Grid>\r\n      </Grid>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"sourceRoot":""}