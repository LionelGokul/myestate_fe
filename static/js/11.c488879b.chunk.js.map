{"version":3,"sources":["shared/components/UIElements/NoItems.js","shared/Icons/undraw_No_data_re_kwbl.svg","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/Fab/Fab.js","pages/MyProperties/Components/MyPropertiesCard.js","pages/MyProperties/Components/MyPropertiesList.js"],"names":["NoItems","props","container","direction","justify","alignItems","alt","src","undraw_No_data_re_kwbl","style","height","margin","width","items","xs","className","text","module","exports","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","ref","_props$align","align","classes","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","typography","caption","button","overline","srOnly","position","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","name","Fab","children","_props$component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$size","size","ButtonBase","extended","focusRipple","focusVisible","label","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","boxShadow","shadows","getContrastText","grey","backgroundColor","A100","action","disabledBackground","textDecoration","justifyContent","contrastText","dark","sizeSmall","sizeMedium","memo","property","Grid","item","spacing","to","id","images","url","sm","bhk","city","sqft","price","aria-label","fontSize","cursor","MyPropertiesList","sendRequest","useAxios","useContext","AlertMessageContext","useState","properties","setProperties","useStateValue","user","useEffect","userId","Accept","then","response","catch","err","console","log","undefined","length","map","key"],"mappings":"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","file":"static/js/11.c488879b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport undraw_No_data_re_kwbl from '../../Icons/undraw_No_data_re_kwbl.svg';\r\n\r\nconst NoItems = (props) => {\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n      <img\r\n        alt=\"no result icon\"\r\n        src={undraw_No_data_re_kwbl}\r\n        style={{ height: 200, margin: 0, width: '100%' }}\r\n      />\r\n      <Grid items xs></Grid>\r\n      <Grid items xs>\r\n        <span className=\"noitem_msg\">{props.text}</span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NoItems;\r\n","module.exports = __webpack_public_path__ + \"static/media/undraw_No_data_re_kwbl.6aed01b7.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\nvar Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'large' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'round' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, variant !== \"round\" && classes.extended, size !== 'large' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['extended', 'round'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { MdModeEdit } from 'react-icons/md';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst MyPropertiesCard = ({ property }) => {\r\n  return (\r\n    <Grid item xs={12} className=\"prop_card\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n      >\r\n        <Grid item xs style={{ width: '40%' }}>\r\n          <Link to={`/property/${property.id}`}>\r\n            <img\r\n              className=\"cmn_card_media\"\r\n              src={property.images[0].url}\r\n              alt={property.name}\r\n            />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs sm container style={{ height: 200 }}>\r\n          <Grid item xs container direction=\"column\" spacing={2}>\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                {property.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {property.bhk}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                className=\"card_prop_details\"\r\n              >\r\n                {property.city}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                {property.sqft}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                {property.price}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link to={`/property/${property.id}/edit`}>\r\n              <Fab\r\n                aria-label=\"like\"\r\n                color=\"secondary\"\r\n                size=\"medium\"\r\n                className=\"card_close_btn\"\r\n              >\r\n                <MdModeEdit style={{ fontSize: 20, cursor: 'pointer' }} />\r\n              </Fab>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.memo(MyPropertiesCard);\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useStateValue } from '../../../shared/DataLayer/Context';\r\nimport MyPropertiesCard from './MyPropertiesCard';\r\nimport { useAxios } from '../../../shared/hooks/useAxios';\r\nimport NoItems from '../../../shared/components/UIElements/NoItems';\r\nimport AlertMessageContext from '../../../shared/DataLayer/AlertMesageContext';\r\n\r\nconst MyPropertiesList = () => {\r\n  const { sendRequest } = useAxios();\r\n  const alertContext = useContext(AlertMessageContext);\r\n  const [properties, setProperties] = useState();\r\n  const [{ user }] = useStateValue();\r\n  useEffect(() => {\r\n    sendRequest(\r\n      'post',\r\n      'my-properties',\r\n      {\r\n        userId: user.id,\r\n      },\r\n      {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    )\r\n      .then((response) => {\r\n        setProperties(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log('err', err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {properties !== undefined ? (\r\n        properties.length === 0 ? (\r\n          <NoItems text=\"Sorry you haven't created any properties.\" />\r\n        ) : (\r\n          properties.map((property) => {\r\n            return <MyPropertiesCard property={property} key={property.id} />;\r\n          })\r\n        )\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPropertiesList;\r\n"],"sourceRoot":""}