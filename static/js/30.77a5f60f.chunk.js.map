{"version":3,"sources":["pages/User/Components/UserForm.js"],"names":["React","memo","props","useState","preview","setPreview","inputFileRef","useRef","useEffect","profilePic","objectUrl","URL","createObjectURL","revokeObjectURL","undefined","container","direction","justify","alignItems","type","ref","onChange","e","target","files","setProfilePic","alert","style","display","accept","item","xs","sm","overlap","anchorOrigin","vertical","horizontal","badgeContent","className","onClick","current","click","alt","user","name","src","imageUrl","id","label","defaultValue","rules","required","spacing","pattern","value","message","disabled","onCancel"],"mappings":"yLA2IeA,cAAMC,MAjIJ,SAACC,GAAW,IAAD,EACIC,mBAAS,MADb,mBACnBC,EADmB,KACVC,EADU,KAGpBC,EAAeC,iBAAO,MAiC5B,OAbAC,qBAAU,WACR,GAAKN,EAAMO,WAAX,CAKA,IAAMC,EAAYC,IAAIC,gBAAgBV,EAAMO,YAI5C,OAHAJ,EAAWK,GAGJ,kBAAMC,IAAIE,gBAAgBH,IAR/BL,OAAWS,KASZ,CAACZ,EAAMO,aAGR,oCACE,kBAAC,IAAD,CAAMM,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,2BACEC,KAAK,OACLC,IAAKd,EACLe,SAjCa,SAACC,IACR,EAGiB,eAA3BA,EAAEC,OAAOC,MAAM,GAAGL,MACS,cAA3BG,EAAEC,OAAOC,MAAM,GAAGL,KAElBjB,EAAMuB,cAAcH,EAAEC,OAAOC,MAAM,IAEnCE,MAAM,oDAyBFC,MAAO,CAAEC,QAAS,QAClBC,OAAO,2BAET,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CACEC,QAAQ,SACRC,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aACE,kBAAC,IAAD,CACEC,UAAU,wBACVC,QAnDW,WACvBjC,EAAakC,QAAQC,YAsDb,kBAAC,IAAD,CACEC,IAAKxC,EAAMyC,KAAKC,KAChBC,IAA0B,OAArB3C,EAAMO,WAAsBP,EAAMyC,KAAKG,SAAW1C,EACvDkC,UAAU,mBAIhB,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CACEe,GAAG,OACHH,KAAK,OACLI,MAAM,OACNC,aAAa,GACbC,MAAO,CAAEC,UAAU,OAIzB,kBAAC,IAAD,CACEpC,WAAS,EACTqC,QAAS,EACTpC,UAAU,MACVC,QAAQ,SACRC,WAAW,UAEX,kBAAC,IAAD,CAAMY,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CACEe,GAAG,QACHH,KAAK,QACLI,MAAM,QACNC,aAAa,GACbC,MAAO,CACLC,UAAU,EACVE,QAAS,CAAEC,MAAO,aAAcC,QAAS,0BAI/C,kBAAC,IAAD,CAAMzB,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAAC,IAAD,CAAWiB,aAAa,MAAMO,UAAQ,EAACR,MAAM,kBAE/C,kBAAC,IAAD,CAAMlB,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAAC,IAAD,CACEe,GAAG,SACHH,KAAK,SACLI,MAAM,eACNC,aAAa,GACbC,MAAO,CACLC,UAAU,EACVE,QAAS,CACPC,MAAO,WACPC,QAAS,kCAMnB,yBAAKjB,UAAU,cACb,kBAAC,IAAD,CAAMvB,WAAS,EAACC,UAAU,OACxB,kBAAC,IAAD,CAAMc,MAAI,EAACC,IAAE,IACb,kBAAC,IAAD,CAAMD,MAAI,EAACC,IAAE,GACX,kBAAC,IAAD,CAAmB0B,SAAU,gBAE/B,kBAAC,IAAD,CAAM3B,MAAI,EAACC,IAAE,MAGjB,yBAAKO,UAAU","file":"static/js/30.77a5f60f.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CustomTextField from '../../../shared/components/FormElements/CustomTextField';\r\nimport { TextField } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { FiEdit } from 'react-icons/fi';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport FormSubmitSection from '../../../shared/components/FormElements/FormSubmitSection';\r\n\r\nlet saveImage = false;\r\nconst UserForm = (props) => {\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  const inputFileRef = useRef(null);\r\n\r\n  const profilePicUpload = () => {\r\n    inputFileRef.current.click();\r\n  };\r\n\r\n  const onFilechange = (e) => {\r\n    saveImage = true;\r\n    /*Selected files data can be collected here.*/\r\n    if (\r\n      e.target.files[0].type === 'image/jpeg' ||\r\n      e.target.files[0].type === 'image/png'\r\n    )\r\n      props.setProfilePic(e.target.files[0]);\r\n    else {\r\n      alert('upload only images with jpeg and png file types');\r\n    }\r\n  };\r\n\r\n  // create a preview as a side effect, whenever selected file is changed\r\n  useEffect(() => {\r\n    if (!props.profilePic) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n\r\n    const objectUrl = URL.createObjectURL(props.profilePic);\r\n    setPreview(objectUrl);\r\n\r\n    // free memory when ever this component is unmounted\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [props.profilePic]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <input\r\n          type=\"file\"\r\n          ref={inputFileRef}\r\n          onChange={onFilechange}\r\n          style={{ display: 'none' }}\r\n          accept=\"image/x-png,image/jpeg\"\r\n        />\r\n        <Grid item xs={12} sm={1}>\r\n          <Badge\r\n            overlap=\"circle\"\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            badgeContent={\r\n              <FiEdit\r\n                className=\"user_img_upld_btn btn\"\r\n                onClick={profilePicUpload}\r\n              />\r\n            }\r\n          >\r\n            <Avatar\r\n              alt={props.user.name}\r\n              src={props.profilePic === null ? props.user.imageUrl : preview}\r\n              className=\"avatar_large\"\r\n            />\r\n          </Badge>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <CustomTextField\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12} sm={4}>\r\n          <CustomTextField\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: true,\r\n              pattern: { value: /^\\S+@\\S+$/i, message: 'please check email' },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} sm={1}>\r\n          <TextField defaultValue=\"+91\" disabled label=\"Country Code\" />\r\n        </Grid>\r\n        <Grid item xs={8} sm={3}>\r\n          <CustomTextField\r\n            id=\"mobile\"\r\n            name=\"mobile\"\r\n            label=\"Phone Number\"\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: true,\r\n              pattern: {\r\n                value: /^\\d{10}/i,\r\n                message: 'please check phone number',\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"margin_top\">\r\n        <Grid container direction=\"row\">\r\n          <Grid item xs></Grid>\r\n          <Grid item xs>\r\n            <FormSubmitSection onCancel={() => {}} />\r\n          </Grid>\r\n          <Grid item xs></Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className=\"margin_top\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(UserForm);\r\n"],"sourceRoot":""}